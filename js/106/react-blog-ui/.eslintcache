[{"C:\\xampp\\htdocs\\webDev\\homework\\js\\106\\react-blog-ui\\src\\index.js":"1","C:\\xampp\\htdocs\\webDev\\homework\\js\\106\\react-blog-ui\\src\\App.js":"2","C:\\xampp\\htdocs\\webDev\\homework\\js\\106\\react-blog-ui\\src\\reportWebVitals.js":"3","C:\\xampp\\htdocs\\webDev\\homework\\js\\106\\react-blog-ui\\src\\Posts.js":"4","C:\\xampp\\htdocs\\webDev\\homework\\js\\106\\react-blog-ui\\src\\Header.js":"5","C:\\xampp\\htdocs\\webDev\\homework\\js\\106\\react-blog-ui\\src\\Post.js":"6","C:\\xampp\\htdocs\\webDev\\homework\\js\\106\\react-blog-ui\\src\\Fetch.js":"7","C:\\xampp\\htdocs\\webDev\\homework\\js\\106\\react-blog-ui\\src\\Comments.js":"8","C:\\xampp\\htdocs\\webDev\\homework\\js\\106\\react-blog-ui\\src\\Comment.js":"9","C:\\xampp\\htdocs\\webDev\\homework\\js\\106\\react-blog-ui\\src\\AddComment.js":"10"},{"size":500,"mtime":1609964072909,"results":"11","hashOfConfig":"12"},{"size":1237,"mtime":1615324394809,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":1336,"mtime":1615412915795,"results":"15","hashOfConfig":"12"},{"size":498,"mtime":1615324693248,"results":"16","hashOfConfig":"12"},{"size":1142,"mtime":1615413035960,"results":"17","hashOfConfig":"12"},{"size":1204,"mtime":1609964067359,"results":"18","hashOfConfig":"12"},{"size":963,"mtime":1615331115473,"results":"19","hashOfConfig":"12"},{"size":524,"mtime":1615329706750,"results":"20","hashOfConfig":"12"},{"size":841,"mtime":1615329437238,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"10byqoc",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\xampp\\htdocs\\webDev\\homework\\js\\106\\react-blog-ui\\src\\index.js",[],["43","44"],"C:\\xampp\\htdocs\\webDev\\homework\\js\\106\\react-blog-ui\\src\\App.js",[],"C:\\xampp\\htdocs\\webDev\\homework\\js\\106\\react-blog-ui\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\webDev\\homework\\js\\106\\react-blog-ui\\src\\Posts.js",["45"],"C:\\xampp\\htdocs\\webDev\\homework\\js\\106\\react-blog-ui\\src\\Header.js",[],"C:\\xampp\\htdocs\\webDev\\homework\\js\\106\\react-blog-ui\\src\\Post.js",[],"C:\\xampp\\htdocs\\webDev\\homework\\js\\106\\react-blog-ui\\src\\Fetch.js",[],"C:\\xampp\\htdocs\\webDev\\homework\\js\\106\\react-blog-ui\\src\\Comments.js",[],"C:\\xampp\\htdocs\\webDev\\homework\\js\\106\\react-blog-ui\\src\\Comment.js",[],"C:\\xampp\\htdocs\\webDev\\homework\\js\\106\\react-blog-ui\\src\\AddComment.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":23,"column":17,"nodeType":"52","endLine":23,"endColumn":36},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"react-hooks/exhaustive-deps","Assignments to the 'posts' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-global-assign","no-unsafe-negation"]